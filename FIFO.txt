
//1st code : Writer Code

#include<stdio.h>
#include<string.h>
#include<fcntl.h>
#include<sys/stat.h>
#include<sys/types.h>
#include<unistd.h>
#include<stdbool.h>

int main()
{
    int fd;
    char *myfifo = "/tmp/myfifo";

    // Create the named pipe (FIFO)
    mkfifo(myfifo, 0666);

    char sentence[80];

    while(1)
    {
        // Open FIFO for writing
        fd = open(myfifo, O_WRONLY);

        // Take input sentence from the user
        printf("Enter a sentence: ");
        fgets(sentence, 80, stdin);

        // Write the sentence to the FIFO
        write(fd, sentence, strlen(sentence) + 1);
        close(fd);

        // Open FIFO for reading
        fd = open(myfifo, O_RDONLY);

        // Read and print the processed data
        char processed_data[256];
        read(fd, processed_data, sizeof(processed_data));
        printf("Processed data: %s\n", processed_data);
        close(fd);
    }

    return 0;
}


//2nd Code: Reader Code

#include<stdio.h>
#include<string.h>
#include<fcntl.h>
#include<sys/stat.h>
#include<sys/types.h>
#include<unistd.h>
#include<stdbool.h>

#define MAX_LEN 1000

int main()
{
    int fd;
    char *myfifo = "/tmp/myfifo";

    // Create the named pipe (FIFO)
    mkfifo(myfifo, 0666);

    while (1)
    {
        // Open FIFO for reading
        fd = open(myfifo, O_RDONLY);

        // Read the sentence from the FIFO
        char sentence[80];
        read(fd, sentence, sizeof(sentence));
        
      //  read(fd, sentence, 80);
        // Print the read sentencering and close
        printf("User1: %s\n", sentence);
        close(fd);
        
 
      //process the data


    int wordCount = 0;
    int charCount = 0;
    int lineCount = 0;
    int spaceCount = 0;
    bool inWord = false;
  
    for (int i = 0; sentence[i] != '\0'; i++) {
        charCount++;

         if (sentence[i] == ' ' || sentence[i] == '\t' || sentence[i] == '\n' || sentence[i] == '\r') {
            if (inWord) {
                wordCount++;
                inWord = false;
            }
            if (sentence[i] == '\n') {
                lineCount++;
            }
            if(sentence[i] == ' '){
                spaceCount++;
            }
        } 
        else {
            inWord = true;
        }
    }
    // Check if the last word was counted
    if (inWord) {
        wordCount++;
    }

    // If there was no newline at the end, but the string is not empty, count it as a line
    if (charCount > 0 && sentence[charCount - 1] != '\n') {
        lineCount++;
    }
    charCount = charCount - spaceCount - 1; //excluding extra 1 to correct charcount , not sure why
   
        // Create a string with the counting results
        char counting_result[256];
        snprintf(counting_result, sizeof(counting_result), "Characters: %d, Words: %d, Lines: %d", charCount, wordCount, lineCount);


        // Open FIFO for writing
        fd = open(myfifo, O_WRONLY);

           
        // Send the counting results back to Process 1
        write(fd, counting_result, strlen(counting_result) + 1);
        close(fd);
    }

    return 0;
}
//OUTPUT
/*
Enter a sentence: nice try
User1: nice try
Processed data: Characters: 7, Words: 2, Lines: 1





*/
